CREATE TABLE PROJECT1EMPLOYEES 
   (	"EMPLOYEEID" NUMBER NOT NULL ENABLE, 
    "EMPLOYEE_EMAIL" VARCHAR2(255) NOT NULL UNIQUE,
	"EMPPASSWORD" VARCHAR2(20) NOT NULL, 
	"FIRSTNAME" VARCHAR2(20), 
	"LASTNAME" VARCHAR2(20),
	"ADDRESS" VARCHAR2(255),
	"CITY" VARCHAR2(30),
	"STATE" VARCHAR2(20),
	"JOB_TITLE"VARCHAR2(20),
	CONSTRAINT "EMPLOYEE_ID_PK" PRIMARY KEY ("EMPLOYEEID"))
	
	CREATE TABLE PROJECT1MANAGERS
   (	"MANAGERID" NUMBER NOT NULL ENABLE, 
    "MANAGER_EMAIL" VARCHAR2(255) NOT NULL UNIQUE,
	"MANPASSWORD" VARCHAR2(20) NOT NULL, 
	"FIRSTNAME" VARCHAR2(20), 
	"LASTNAME" VARCHAR2(20),
	CONSTRAINT "MANAGER_ID_PK" PRIMARY KEY ("MANAGERID"))
	
	CREATE TABLE PROJECT1REIMBURSEMENT
   (	"REIMBURSEMENTID" NUMBER NOT NULL ENABLE, 
	"STATUS" VARCHAR2(20) NOT NULL, 
	"AMOUNT" NUMBER(20) NOT NULL CHECK(AMOUNT > 0),
	"EMPLOYEEID" NUMBER,
	"MANAGERID" NUMBER,
	CONSTRAINT "REIMBURSEMENT_ID_PK" PRIMARY KEY ("REIMBURSEMENTID"))
	
	ALTER TABLE PROJECT1REIMBURSEMENT
	ADD CONSTRAINT "MANAGER_FK" FOREIGN KEY ("MANAGERID")
	  REFERENCES PROJECT1MANAGERS ("MANAGERID") ON DELETE CASCADE
	
	  ALTER TABLE PROJECT1REIMBURSEMENT
	ADD CHECK (AMOUNT > 0)
	
	CONSTRAINT "EMPLOYEE_FK" FOREIGN KEY ("EMPLOYEEID")
	  REFERENCES PROJECT1EMPLOYEES ("EMPLOYEEID") ON DELETE CASCADE
	CONSTRAINT "MANAGER_FK" FOREIGN KEY ("MANAGERID")
	  REFERENCES PROJECT1MANAGERS ("MANAGERID") ON DELETE CASCADE
	  
	  TRIGGER TRANSACTION_SEQ_TRIGGER
BEFORE INSERT ON MARTIS73.TRANSACTION
FOR EACH ROW
BEGIN
	IF :new.TRANSACTIONID IS NULL THEN
		SELECT transaction_id_seq.nextval INTO :new.TRANSACTIONID FROM DUAL;
	END IF;
END;
	  
TRIGGER EMPID_SEQ_TRIGGER
BEFORE INSERT ON PROJECT1EMPLOYEES
FOR EACH ROW
BEGIN
	IF :new.EMPLOYEEID IS NULL THEN
		SELECT PROJECT1EMP_ID.nextval INTO :new.EMPLOYEEID FROM DUAL;
	END IF;
END; 
	  
	  
TRIGGER CUSTID_SEQ_TRIGGER
BEFORE INSERT ON MARTIS73.BANKCUSTOMERS
FOR EACH ROW
BEGIN
	IF :new.CUSTOMERID IS NULL THEN
		SELECT cust_id_seq.nextval INTO :new.CUSTOMERID FROM DUAL;
	END IF;
END;

ALTER TABLE PROJECT1EMPLOYEES ADD COLUMN REIMBUSRMENT_IMG ;
	  
INSERT INTO PROJECT1REIMBURSEMENT (REIMBURSEMENTID, STATUS, AMOUNT, EMPLOYEEID, MANAGERID, REIMBURSE_IMG, REIMBURSEMENTTYPE, REIMBURSEMENTREASON) VALUES (null, 'stuff', 4, null, null, null, 'df', 'd');
INSERT INTO PROJECT1REIMBURSEMENT (STATUS, AMOUNT, EMPLOYEEID, REIMBURSEMENTTYPE, REIMBURSEMENTREASON) VALUES ('d', 4, 500, 'f', 'd')
	  
http://localhost:8080/revature-project-one/managerViewEmp.do

select e.EMPLOYEEID, e.EMPLOYEE_EMAIL, e.FIRSTNAME, e.LASTNAME, e.ADDRESS, e.CITY, e.STATE, e.JOB_TITLE from PROJECT1EMPLOYEES e



select e.EMPLOYEEID, e.EMPLOYEE_EMAIL, e.FIRSTNAME, e.LASTNAME, e.ADDRESS, e.CITY, e.STATE, e.JOB_TITLE from PROJECT1EMPLOYEES e WHERE EMPLOYEE_EMAIL = sara@gmail.com


select r.REIMBURSEMENTID, r.STATUS, r.AMOUNT, r.EMPLOYEEID, r.REIMBURSEMENTTYPE, r.REIMBURSEMENTREASON from PROJECT1REIMBURSEMENT r WHERE STATUS = 'Pending'

CREATE OR REPLACE PROCEDURE MARTIS73.CREATE_REIMBURSEMENT(EMPLOYEEID IN NUMBER, REIMBURSEMENTTYPE IN VARCHAR2, AMOUNT IN NUMBER, REIMBURSEMENTREASON IN VARCHAR2, STATUS IN VARCHAR2)
IS
BEGIN
   INSERT INTO PROJECT1REIMBURSEMENT (REIMBURSEMENTID, STATUS, AMOUNT, EMPLOYEEID, REIMBURSEMENTTYPE, REIMBURSEMENTREASON) VALUES (REIMBURSE_ID_SEQ.nextval, STATUS, AMOUNT, EMPLOYEEID, REIMBURSEMENTTYPE, REIMBURSEMENTREASON);

END;










